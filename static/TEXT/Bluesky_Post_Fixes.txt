Bluesky Post Fixes
user
<!-- post_bluesky.html -->
{% extends 'base1.html' %}

{% block title %}Post to Bluesky{% endblock %}

{% block content %}
<h1>Post to Bluesky  / post_bluesky.html</h1>
<script>
    document.querySelector('form').addEventListener('submit', function (e) {
        const image = document.getElementById('image_path').files[0];
        const textStatus = document.getElementById('text_status').value.trim();

        if (!image || !textStatus) {
            e.preventDefault();
            alert('Please upload an image and write a status.');
        }
    });
</script>

    <form action="/post_bluesky" method="POST" enctype="multipart/form-data">
        <label for="image_path">Select Image:</label>
        <input type="file" id="image_path" name="image_path" accept="image/*" required>
        <br><br>
        <label for="text_status">Status Text:</label>
        <textarea id="text_status" name="text_status" rows="4" cols="50" required></textarea>
        <br><br>
        <button type="submit">Post</button>
    </form>

{% if image %}
    <h2>Preview of Your Image:</h2>
    <img src="{{ image }}" alt="Preview Image" style="max-width: 100%; height: auto;">
{% endif %}

{% endblock %}
---------------------------
def post_to_bluesky(image_path,text_status):
    client = Client()
    client.login('flaskarchitect.bsky.social', '@nothingBUT')

    with open(image_path, 'rb') as f:
        img_data = f.read()

        upload = client.upload_blob(img_data)
        images = [models.AppBskyEmbedImages.Image(alt='test image', image=upload.blob)]
        embed = models.AppBskyEmbedImages.Main(images=images)

        client.com.atproto.repo.create_record(
            models.ComAtprotoRepoCreateRecord.Data(
                repo=client.me.did,
                collection=models.ids.AppBskyFeedPost,
                record=models.AppBskyFeedPost.Record(
                    created_at=client.get_current_time_iso(), text=text_status, embed=embed
                ),
            )
        )

@app.route('/post_bluesky', methods=['POST', 'GET'])
def post_bluesky():
        image_path = request.form.get('image_path')
        text_status = request.form.get('text_status')
        post_to_bluesky(image_path,text_status)
        return render_template('post_bluesky.html', image=image_path)
---------- it is not even opening a form page 
ChatGPT
Your code has a few issues preventing the form from functioning properly. Here's a step-by-step explanation and corrections:

### Issues in the Code
1. **JavaScript Selector Issue**:
   - The `<form>` tag isn't properly targeted in the JavaScript. This could cause the event listener to fail, especially if the script runs before the DOM is fully loaded.

2. **`image_path` and `text_status` Handling**:
   - In the Flask route, `image_path` and `text_status` are fetched using `request.form.get()`. However, `image_path` comes from a file input and should be accessed via `request.files`.

3. **Template Logic**:
   - The form expects `image` to preview, but `image_path` in your Flask route might not correctly correspond to the image file path for rendering.

4. **Server Route for Serving Static Images**:
   - The uploaded image may not be served correctly unless saved to a static or temporary directory and rendered accordingly.

### Fixes

#### 1. Update the JavaScript to Wait for DOM Load
Ensure your script runs after the DOM is fully loaded:

```html
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelector('form').addEventListener('submit', function (e) {
            const image = document.getElementById('image_path').files[0];
            const textStatus = document.getElementById('text_status').value.trim();

            if (!image || !textStatus) {
                e.preventDefault();
                alert('Please upload an image and write a status.');
            }
        });
    });
</script>
```

#### 2. Handle `image_path` Correctly in Flask
Replace `request.form.get('image_path')` with `request.files.get('image_path')`. Save the uploaded file and pass the correct path for rendering.

#### 3. Adjust the Flask Route
Hereâ€™s the corrected `post_bluesky` route:

```python
from flask import Flask, render_template, request, redirect, url_for
import os
from your_bluesky_library import Client, models  # Replace with actual library

app = Flask(__name__)
UPLOAD_FOLDER = 'static/uploads'  # Ensure this folder exists
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

@app.route('/post_bluesky', methods=['POST', 'GET'])
def post_bluesky():
    if request.method == 'POST':
        # Handle uploaded image
        image_file = request.files.get('image_path')
        text_status = request.form.get('text_status')
        
        if image_file and text_status:
            # Save file to static/uploads
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], image_file.filename)
            image_file.save(file_path)

            # Post to Bluesky
            post_to_bluesky(file_path, text_status)

            return render_template('post_bluesky.html', image=url_for('static', filename=f'uploads/{image_file.filename}'))
    
    # GET request
    return render_template('post_bluesky.html', image=None)
```

#### 4. Validate the Form and Upload Path
Ensure the `UPLOAD_FOLDER` is writable and exists:
```bash
mkdir -p static/uploads
chmod 755 static/uploads
```

#### 5. Correct the HTML Form
Ensure `enctype="multipart/form-data"` is set correctly, which you already have:
```html
<form action="/post_bluesky" method="POST" enctype="multipart/form-data">
    <label for="image_path">Select Image:</label>
    <input type="file" id="image_path" name="image_path" accept="image/*" required>
    <br><br>
    <label for="text_status">Status Text:</label>
    <textarea id="text_status" name="text_status" rows="4" cols="50" required></textarea>
    <br><br>
    <button type="submit">Post</button>
</form>
```

---

After making these changes, the form should work correctly and handle file uploads appropriately. Let me know if you need further help!

